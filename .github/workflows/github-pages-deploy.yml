name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug - Show directory structure before
        run: find . -type f -not -path "*/\.*" | sort

      - name: Create config file with secrets
        run: |
          echo "// Production configuration generated by GitHub Actions at $(date)" > config.js
          echo "const config = {" >> config.js
          echo "    supabaseUrl: '${{ secrets.SUPABASE_URL }}'," >> config.js
          echo "    supabaseKey: '${{ secrets.SUPABASE_ANON_KEY }}'" >> config.js
          echo "};" >> config.js
          echo "// Config file created with size: $(wc -c < config.js) bytes" >> config.js
          
          # Debug output (without showing actual key)
          echo "=== Config.js file created ==="
          grep -v "supabaseKey" config.js
          echo "File size: $(wc -c < config.js) bytes"
          echo "Secret placeholders replaced: $(grep -c '$' config.js || echo 'Yes')"
          
      - name: Create verification file 
        run: |
          echo "Config file created at: $(date)" > config-created.txt
          echo "File size: $(wc -c < config.js) bytes" >> config-created.txt
          echo "File exists: $([ -f config.js ] && echo 'Yes' || echo 'No')" >> config-created.txt
          echo "Directory listing:" >> config-created.txt
          ls -la >> config-created.txt
          
      - name: Verify config.js creation
        run: |
          echo "Verifying config.js file..."
          ls -la
          if [ -f "config.js" ]; then
            echo "✅ config.js file exists"
            filesize=$(stat -c%s "config.js")
            echo "File size: $filesize bytes"
            
            # Check if placeholders were replaced
            if grep -q '$' config.js; then
              echo "❌ ERROR: Placeholders might not be replaced in config.js"
              cat config.js | grep -v "supabaseKey"
            else
              echo "✅ Placeholders properly replaced"
            fi
          else
            echo "❌ config.js does not exist!"
            exit 1
          fi
          
      - name: Setup Node.js if needed
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Run JavaScript verification
        run: |
          echo "Running JavaScript verification..."
          node verify-config.js || echo "Verification script failed but continuing"
          if [ -f "config-verification.txt" ]; then
            cat config-verification.txt
          else 
            echo "config-verification.txt not created"
          fi
          
      - name: Ensure .well-known directory exists
        run: mkdir -p .well-known
        
      # If you have the apple-developer-domain-association.txt file in your repo
      # Uncomment this step if you've added the file to your repository
      # - name: Copy Apple domain association file
      #   run: |
      #     cp .github/apple-developer-domain-association.txt .well-known/apple-developer-domain-association.txt
      #     ls -la .well-known/

      - name: Ensure .nojekyll file exists
        run: |
          if [ ! -f ".nojekyll" ]; then
            echo "Creating .nojekyll file"
            touch .nojekyll
          fi
          ls -la

      - name: Create a direct test file
        run: |
          cat > direct-test.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Direct Config Test</title>
            <script>
            // Inline config for testing
            const config = {
              supabaseUrl: 'https://peaphqbxdmknxzsfdxuh.supabase.co',
              supabaseKey: '${{ secrets.SUPABASE_ANON_KEY }}'
            };
            </script>
          </head>
          <body>
            <h1>Direct Config Test</h1>
            <div id="result"></div>
            <script>
              document.getElementById('result').innerHTML = 
                \`<p>Config loaded directly in HTML.</p>
                 <p>supabaseUrl: \${config.supabaseUrl}</p>
                 <p>supabaseKey: \${config.supabaseKey ? "Exists (length: " + config.supabaseKey.length + ")" : "Missing!"}</p>\`;
            </script>
          </body>
          </html>
          EOF
          echo "Created direct-test.html"

      - name: Debug - Show directory structure after
        run: |
          echo "Final directory structure:"
          find . -type f -not -path "*/\.*" | sort
          echo "Checking specific files:"
          ls -la config.js || echo "config.js not found"
          ls -la config-created.txt || echo "config-created.txt not found"
          ls -la .nojekyll || echo ".nojekyll not found"
          ls -la direct-test.html || echo "direct-test.html not found"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: . 